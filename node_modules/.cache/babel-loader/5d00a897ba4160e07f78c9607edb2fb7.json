{"ast":null,"code":"import { React, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from './../images/LogoMesto.svg'; // управлять отрисовкой страницы в зависимости от пути в строке - dataLink\n// function CurrentLink({ dataLink, handleLoggedIn }) {\n//     if (dataLink === \"/sign-up\") {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <Link className=\"button-text\" to=\"/sign-in\">Войти</Link>\n//             </div>\n//         )\n//     } else if (dataLink === \"/sign-in\") {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <Link className=\"button-text\" to=\"/sign-up\">Регистрация</Link>\n//             </div>\n//         )\n//     } else {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <h2 className=\"button-text_out\">{localStorage.getItem('email')}</h2>\n//                 <button className=\"button-text_out\" onClick={() => handleLoggedIn(false)}>Выйти</button>\n//             </div>\n//         )\n//     }\n// }\n// function Header({ handleLoggedInStateChanged }) {\n//     const history = useHistory();\n//     const [currentRout, setCurrentRout] = useState(window.location.pathname);\n//     //console.log(handleLoggedInStateChanged)\n//     useEffect(() => {\n//         return history.listen((location) => {\n//             setCurrentRout(location.pathname);\n//         })\n//     }, [history])\n//     return (\n//         <header className=\"header\">\n//             <img className=\"header__logo\" src={logo} alt=\"Логотип\"></img>\n//             <CurrentLink dataLink={currentRout} handleLoggedIn={handleLoggedInStateChanged} />\n//         </header >\n//     )\n// }\n\nexport default Header;","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","logo","Header"],"sources":["C:/Users/vyach/dev/react-mesto-auth/src/components/Header.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport logo from './../images/LogoMesto.svg';\r\n// управлять отрисовкой страницы в зависимости от пути в строке - dataLink\r\n// function CurrentLink({ dataLink, handleLoggedIn }) {\r\n//     if (dataLink === \"/sign-up\") {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <Link className=\"button-text\" to=\"/sign-in\">Войти</Link>\r\n//             </div>\r\n//         )\r\n//     } else if (dataLink === \"/sign-in\") {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <Link className=\"button-text\" to=\"/sign-up\">Регистрация</Link>\r\n//             </div>\r\n//         )\r\n//     } else {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <h2 className=\"button-text_out\">{localStorage.getItem('email')}</h2>\r\n//                 <button className=\"button-text_out\" onClick={() => handleLoggedIn(false)}>Выйти</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// function Header({ handleLoggedInStateChanged }) {\r\n//     const history = useHistory();\r\n//     const [currentRout, setCurrentRout] = useState(window.location.pathname);\r\n//     //console.log(handleLoggedInStateChanged)\r\n//     useEffect(() => {\r\n//         return history.listen((location) => {\r\n//             setCurrentRout(location.pathname);\r\n//         })\r\n//     }, [history])\r\n\r\n//     return (\r\n//         <header className=\"header\">\r\n//             <img className=\"header__logo\" src={logo} alt=\"Логотип\"></img>\r\n//             <CurrentLink dataLink={currentRout} handleLoggedIn={handleLoggedInStateChanged} />\r\n//         </header >\r\n//     )\r\n// }\r\n\r\nexport default Header;"],"mappings":"AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,2BAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,MAAf"},"metadata":{},"sourceType":"module"}