{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport logo from './../images/LogoMesto.svg'; // управлять отрисовкой страницы в зависимости от пути в строке - dataLink\n// function CurrentLink({ dataLink, handleLoggedIn }) {\n//     if (dataLink === \"/sign-up\") {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <Link className=\"button-text\" to=\"/sign-in\">Войти</Link>\n//             </div>\n//         )\n//     } else if (dataLink === \"/sign-in\") {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <Link className=\"button-text\" to=\"/sign-up\">Регистрация</Link>\n//             </div>\n//         )\n//     } else {\n//         return (\n//             <div className=\"header__text-container\">\n//                 <h2 className=\"button-text_out\">{localStorage.getItem('email')}</h2>\n//                 <button className=\"button-text_out\" onClick={() => handleLoggedIn(false)}>Выйти</button>\n//             </div>\n//         )\n//     }\n// }\n// function Header({ handleLoggedInStateChanged }) {\n//     const history = useHistory();\n//     const [currentRout, setCurrentRout] = useState(window.location.pathname);\n//     //console.log(handleLoggedInStateChanged)\n//     useEffect(() => {\n//         return history.listen((location) => {\n//             setCurrentRout(location.pathname);\n//         })\n//     }, [history])\n//     return (\n//         <header className=\"header\">\n//             <img className=\"header__logo\" src={logo} alt=\"Логотип\"></img>\n//             <CurrentLink dataLink={currentRout} handleLoggedIn={handleLoggedInStateChanged} />\n//         </header >\n//     )\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header(_ref) {\n  _s();\n\n  let {\n    handleLoggedInStateChanged\n  } = _ref;\n  const history = useHistory();\n  const [currentRout, setCurrentRout] = useState(window.location.pathname); //console.log(handleLoggedInStateChanged)\n\n  useEffect(() => {\n    return history.listen(location => {\n      setCurrentRout(location.pathname);\n    });\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"header\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"header__logo\",\n      src: logo,\n      alt: \"\\u041B\\u043E\\u0433\\u043E\\u0442\\u0438\\u043F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CurrentLink, {\n      dataLink: currentRout,\n      handleLoggedIn: handleLoggedInStateChanged\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Header, \"v2pH4eQo1MROhWjBV527Vp6Kdic=\", false, function () {\n  return [useHistory];\n});\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","logo","Header","handleLoggedInStateChanged","history","currentRout","setCurrentRout","window","location","pathname","listen"],"sources":["C:/Users/vyach/dev/react-mesto-auth/src/components/Header.js"],"sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport logo from './../images/LogoMesto.svg';\r\n// управлять отрисовкой страницы в зависимости от пути в строке - dataLink\r\n// function CurrentLink({ dataLink, handleLoggedIn }) {\r\n//     if (dataLink === \"/sign-up\") {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <Link className=\"button-text\" to=\"/sign-in\">Войти</Link>\r\n//             </div>\r\n//         )\r\n//     } else if (dataLink === \"/sign-in\") {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <Link className=\"button-text\" to=\"/sign-up\">Регистрация</Link>\r\n//             </div>\r\n//         )\r\n//     } else {\r\n//         return (\r\n//             <div className=\"header__text-container\">\r\n//                 <h2 className=\"button-text_out\">{localStorage.getItem('email')}</h2>\r\n//                 <button className=\"button-text_out\" onClick={() => handleLoggedIn(false)}>Выйти</button>\r\n//             </div>\r\n//         )\r\n//     }\r\n// }\r\n\r\n// function Header({ handleLoggedInStateChanged }) {\r\n//     const history = useHistory();\r\n//     const [currentRout, setCurrentRout] = useState(window.location.pathname);\r\n//     //console.log(handleLoggedInStateChanged)\r\n//     useEffect(() => {\r\n//         return history.listen((location) => {\r\n//             setCurrentRout(location.pathname);\r\n//         })\r\n//     }, [history])\r\n\r\n//     return (\r\n//         <header className=\"header\">\r\n//             <img className=\"header__logo\" src={logo} alt=\"Логотип\"></img>\r\n//             <CurrentLink dataLink={currentRout} handleLoggedIn={handleLoggedInStateChanged} />\r\n//         </header >\r\n//     )\r\n// }\r\n\r\nfunction Header({ handleLoggedInStateChanged }) {\r\n    const history = useHistory();\r\n    const [currentRout, setCurrentRout] = useState(window.location.pathname);\r\n    //console.log(handleLoggedInStateChanged)\r\n    useEffect(() => {\r\n        return history.listen((location) => {\r\n            setCurrentRout(location.pathname);\r\n        })\r\n    }, [history])\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <img className=\"header__logo\" src={logo} alt=\"Логотип\"></img>\r\n            <CurrentLink dataLink={currentRout} handleLoggedIn={handleLoggedInStateChanged} />\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header;"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,OAAOC,IAAP,MAAiB,2BAAjB,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,MAAT,OAAgD;EAAA;;EAAA,IAAhC;IAAEC;EAAF,CAAgC;EAC5C,MAAMC,OAAO,GAAGJ,UAAU,EAA1B;EACA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAACS,MAAM,CAACC,QAAP,CAAgBC,QAAjB,CAA9C,CAF4C,CAG5C;;EACAZ,SAAS,CAAC,MAAM;IACZ,OAAOO,OAAO,CAACM,MAAR,CAAgBF,QAAD,IAAc;MAChCF,cAAc,CAACE,QAAQ,CAACC,QAAV,CAAd;IACH,CAFM,CAAP;EAGH,CAJQ,EAIN,CAACL,OAAD,CAJM,CAAT;EAMA,oBACI;IAAQ,SAAS,EAAC,QAAlB;IAAA,wBACI;MAAK,SAAS,EAAC,cAAf;MAA8B,GAAG,EAAEH,IAAnC;MAAyC,GAAG,EAAC;IAA7C;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,WAAD;MAAa,QAAQ,EAAEI,WAAvB;MAAoC,cAAc,EAAEF;IAApD;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAMH;;GAhBQD,M;UACWF,U;;;KADXE,M;AAkBT,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}