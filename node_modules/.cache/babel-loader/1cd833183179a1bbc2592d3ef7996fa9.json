{"ast":null,"code":"class Api {\n  constructor(data) {\n    this.host = data.host;\n    this.token = data.token;\n  } // проверка статуса запроса\n\n\n  _getResponse(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject(`ошибка: ${res.status} - ${res.statusText}`);\n    }\n  } // запрос данных пользователя\n\n\n  getUserInfo() {\n    return fetch(`${this.host}users/me`, {\n      headers: {\n        authorization: this.token\n      }\n    }).then(res => this._getResponse(res));\n  } // отправка данных пользователя\n\n\n  sendUserInfo(firstname, profession) {\n    return fetch(`${this.host}users/me`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: firstname,\n        about: profession\n      })\n    }).then(res => this._getResponse(res));\n  } //запрос изображений с сервера \n\n\n  getImages() {\n    return fetch(`${this.host}cards`, {\n      headers: {\n        authorization: this.token\n      }\n    }).then(res => this._getResponse(res));\n  } // отправка изображений на сервер \n\n\n  sendImages(data) {\n    return fetch(`${this.host}cards`, {\n      method: 'POST',\n      headers: {\n        authorization: this.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: data.image_title,\n        link: data.link\n      })\n    }).then(res => this._getResponse(res));\n  } //смена аватара(отправка на сервер)\n\n\n  sendAvatar(data) {\n    return fetch(`${this.host}users/me/avatar`, {\n      method: 'PATCH',\n      headers: {\n        authorization: this.token,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        avatar: data.link\n      })\n    }).then(res => this._getResponse(res));\n  } //удалить карточку\n\n\n  deleteCard(data) {\n    return fetch(`${this.host}cards/${data}`, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.token\n      }\n    }).then(res => this._getResponse(res));\n  } //поставить лайк \n\n\n  addLike(data) {\n    return fetch(`${this.host}cards/${data}/likes `, {\n      method: 'PUT',\n      headers: {\n        authorization: this.token\n      }\n    }).then(res => this._getResponse(res));\n  } //удалить лайк\n\n\n  deleteLike(data) {\n    return fetch(`${this.host}cards/${data}/likes `, {\n      method: 'DELETE',\n      headers: {\n        authorization: this.token\n      }\n    }).then(res => this._getResponse(res));\n  }\n\n}\n\nconst api = new Api({\n  host: 'https://mesto.nomoreparties.co/v1/cohort-47/',\n  token: 'aa25b93c-b1f5-4136-8d21-3d760fe1b048'\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","data","host","token","_getResponse","res","ok","json","Promise","reject","status","statusText","getUserInfo","fetch","headers","authorization","then","sendUserInfo","firstname","profession","method","body","JSON","stringify","name","about","getImages","sendImages","image_title","link","sendAvatar","avatar","deleteCard","addLike","deleteLike","api"],"sources":["C:/Users/vyach/dev/mesto-react-1/src/utils/Api.js"],"sourcesContent":["class Api {\r\n    constructor(data) {\r\n        this.host = data.host;\r\n        this.token = data.token;\r\n    }\r\n\r\n    // проверка статуса запроса\r\n    _getResponse(res) {\r\n        if (res.ok) {\r\n            return res.json();\r\n        } else {\r\n            return Promise.reject(\r\n                `ошибка: ${res.status} - ${res.statusText}`\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    // запрос данных пользователя\r\n    getUserInfo() {\r\n        return fetch(`${this.host}users/me`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            },\r\n        }).then((res) => this._getResponse(res))\r\n    }\r\n\r\n    // отправка данных пользователя\r\n    sendUserInfo(firstname, profession) {\r\n        return fetch(`${this.host}users/me`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name: firstname, about: profession }),\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    //запрос изображений с сервера \r\n    getImages() {\r\n        return fetch(`${this.host}cards`, {\r\n            headers: {\r\n                authorization: this.token,\r\n            },\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    // отправка изображений на сервер \r\n    sendImages(data) {\r\n        return fetch(`${this.host}cards`, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ name: data.image_title, link: data.link }),\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    //смена аватара(отправка на сервер)\r\n    sendAvatar(data) {\r\n        return fetch(`${this.host}users/me/avatar`, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this.token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ avatar: data.link }),\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    //удалить карточку\r\n    deleteCard(data) {\r\n        return fetch(`${this.host}cards/${data}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    //поставить лайк \r\n    addLike(data) {\r\n        return fetch(`${this.host}cards/${data}/likes `, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n\r\n    //удалить лайк\r\n    deleteLike(data) {\r\n        return fetch(`${this.host}cards/${data}/likes `, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this.token,\r\n            }\r\n        }).then((res) => this._getResponse(res));\r\n    }\r\n}\r\n\r\n\r\nconst api = new Api({\r\n    host: 'https://mesto.nomoreparties.co/v1/cohort-47/',\r\n    token: 'aa25b93c-b1f5-4136-8d21-3d760fe1b048'\r\n});\r\n\r\nexport default api;"],"mappings":"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"},"metadata":{},"sourceType":"module"}