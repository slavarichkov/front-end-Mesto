{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\mesto-react-1\\\\src\\\\components\\\\Main.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from './../utils/Api';\nimport Card from '../components/Card';\nimport currentUserContext from '../contexts/CurrentUserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  //const userInfo = React.useContext(currentUserContext);\n  // const [cards, setCards] = useState([]);\n  // управлять лайком\n  // function handleCardLike(cardId, likes) {\n  //     const isLiked = likes.some(i => i._id === userInfo._id); // проверяем, есть ли уже лайк на этой карточке\n  //     //Отправляем запрос в API и получаем обновлённые данные карточки\n  //     if (!isLiked) {\n  //         api.addLike(cardId).then((newCard) => {\n  //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c)) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\n  //         })\n  //     } else {\n  //         api.deleteLike(cardId).then((newCard) => {\n  //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\n  //         })\n  //     }\n  // }\n  //удаление карточки\n  // function handleCardDelete(cardId) {\n  //     api.deleteCard(cardId).then((newCard) => {\n  //         setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\n  //     })\n  // }\n  // запрос данных пользователя и карточек с сервера\n  // useEffect(() => {\n  //     api.getImages()\n  //         .then((initialCards) => {\n  //             setCards(initialCards);\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         })\n  // }, []);\n  // const userInfo = React.useContext(currentUserContext);\n  // const [cards, setCards] = useState([]);\n  // // управлять лайком\n  // function handleCardLike(cardId, likes) {\n  //     const isLiked = likes.some(i => i._id === userInfo._id); // проверяем, есть ли уже лайк на этой карточке\n  //     //Отправляем запрос в API и получаем обновлённые данные карточки\n  //     if (!isLiked) {\n  //         api.addLike(cardId).then((newCard) => {\n  //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c)) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\n  //         })\n  //     } else {\n  //         api.deleteLike(cardId).then((newCard) => {\n  //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\n  //         })\n  //     }\n  // }\n  // //удаление карточки\n  // function handleCardDelete(cardId) {\n  //     api.deleteCard(cardId).then((newCard) => {\n  //         setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\n  //     })\n  // }\n  // // запрос данных пользователя и карточек с сервера\n  // useEffect(() => {\n  //     api.getImages()\n  //         .then((initialCards) => {\n  //             setCards(initialCards);\n  //         })\n  //         .catch((err) => {\n  //             console.log(err);\n  //         })\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"profile\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"profile__avatar\",\n          src: userInfo.avatar,\n          alt: \"\\u0410\\u0432\\u0430\\u0442\\u0430\\u0440\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"profile__avatar-edit-button\",\n          type: \"button\",\n          onClick: props.onEditAvatar\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile__profile-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile__content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile__firstname\",\n            children: userInfo.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"profile__edit-button\",\n            type: \"button\",\n            onClick: props.onEditProfile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"profile__subtext\",\n          children: userInfo.about\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profile__add-button\",\n        type: \"button\",\n        onClick: props.onAddPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"elements\",\n      children: props.cards.map(card => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          id: card._id,\n          name: card.name,\n          src: card.link,\n          likes: card.likes,\n          onImageClick: props.onCardClick,\n          onCardLike: props.onCardLike,\n          onCardDelete: props.onCardDelete\n        }, card._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","api","Card","currentUserContext","Main","props","userInfo","avatar","onEditAvatar","name","onEditProfile","about","onAddPlace","cards","map","card","_id","link","likes","onCardClick","onCardLike","onCardDelete"],"sources":["C:/Users/vyach/dev/mesto-react-1/src/components/Main.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport api from './../utils/Api';\r\nimport Card from '../components/Card';\r\nimport currentUserContext from '../contexts/CurrentUserContext';\r\n\r\n\r\nfunction Main(props) {\r\n\r\n    //const userInfo = React.useContext(currentUserContext);\r\n    // const [cards, setCards] = useState([]);\r\n\r\n    // управлять лайком\r\n    // function handleCardLike(cardId, likes) {\r\n    //     const isLiked = likes.some(i => i._id === userInfo._id); // проверяем, есть ли уже лайк на этой карточке\r\n    //     //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    //     if (!isLiked) {\r\n    //         api.addLike(cardId).then((newCard) => {\r\n    //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c)) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\r\n    //         })\r\n    //     } else {\r\n    //         api.deleteLike(cardId).then((newCard) => {\r\n    //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n    //         })\r\n    //     }\r\n    // }\r\n\r\n    //удаление карточки\r\n    // function handleCardDelete(cardId) {\r\n    //     api.deleteCard(cardId).then((newCard) => {\r\n    //         setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n    //     })\r\n    // }\r\n\r\n    // запрос данных пользователя и карточек с сервера\r\n    // useEffect(() => {\r\n    //     api.getImages()\r\n    //         .then((initialCards) => {\r\n    //             setCards(initialCards);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         })\r\n    // }, []);\r\n\r\n    // const userInfo = React.useContext(currentUserContext);\r\n    // const [cards, setCards] = useState([]);\r\n\r\n    // // управлять лайком\r\n    // function handleCardLike(cardId, likes) {\r\n    //     const isLiked = likes.some(i => i._id === userInfo._id); // проверяем, есть ли уже лайк на этой карточке\r\n    //     //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    //     if (!isLiked) {\r\n    //         api.addLike(cardId).then((newCard) => {\r\n    //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c)) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\r\n    //         })\r\n    //     } else {\r\n    //         api.deleteLike(cardId).then((newCard) => {\r\n    //             setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    // //удаление карточки\r\n    // function handleCardDelete(cardId) {\r\n    //     api.deleteCard(cardId).then((newCard) => {\r\n    //         setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n    //     })\r\n    // }\r\n\r\n    // // запрос данных пользователя и карточек с сервера\r\n    // useEffect(() => {\r\n    //     api.getImages()\r\n    //         .then((initialCards) => {\r\n    //             setCards(initialCards);\r\n    //         })\r\n    //         .catch((err) => {\r\n    //             console.log(err);\r\n    //         })\r\n    // }, []);\r\n\r\n    return (\r\n        <main>\r\n            <section className=\"profile\">\r\n                <div className=\"profile__container\">\r\n                    <img className=\"profile__avatar\" src={userInfo.avatar} alt=\"Аватар\"></img>\r\n                    <button className=\"profile__avatar-edit-button\" type=\"button\" onClick={props.onEditAvatar}></button>\r\n                </div>\r\n                <div className=\"profile__profile-info\">\r\n                    <div className=\"profile__content\">\r\n                        <h1 className=\"profile__firstname\">{userInfo.name}</h1>\r\n                        <button className=\"profile__edit-button\" type=\"button\" onClick={props.onEditProfile}></button>\r\n                    </div>\r\n                    <p className=\"profile__subtext\">{userInfo.about}</p>\r\n                </div>\r\n                <button className=\"profile__add-button\" type=\"button\" onClick={props.onAddPlace}></button>\r\n            </section>\r\n            <section className=\"elements\">\r\n                {/**  заготовка для изображения пользователя (карточки) */}\r\n                {props.cards.map(card => {\r\n                    return <Card\r\n                        key={card._id}\r\n                        id={card._id}\r\n                        name={card.name}\r\n                        src={card.link}\r\n                        likes={card.likes}\r\n                        onImageClick={props.onCardClick}\r\n                        onCardLike={props.onCardLike}\r\n                        onCardDelete={props.onCardDelete}\r\n                    />\r\n                })}\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default Main;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,gBAAhB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,kBAAP,MAA+B,gCAA/B;;;AAGA,SAASC,IAAT,CAAcC,KAAd,EAAqB;EAEjB;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA,oBACI;IAAA,wBACI;MAAS,SAAS,EAAC,SAAnB;MAAA,wBACI;QAAK,SAAS,EAAC,oBAAf;QAAA,wBACI;UAAK,SAAS,EAAC,iBAAf;UAAiC,GAAG,EAAEC,QAAQ,CAACC,MAA/C;UAAuD,GAAG,EAAC;QAA3D;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,SAAS,EAAC,6BAAlB;UAAgD,IAAI,EAAC,QAArD;UAA8D,OAAO,EAAEF,KAAK,CAACG;QAA7E;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADJ,eAKI;QAAK,SAAS,EAAC,uBAAf;QAAA,wBACI;UAAK,SAAS,EAAC,kBAAf;UAAA,wBACI;YAAI,SAAS,EAAC,oBAAd;YAAA,UAAoCF,QAAQ,CAACG;UAA7C;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAQ,SAAS,EAAC,sBAAlB;YAAyC,IAAI,EAAC,QAA9C;YAAuD,OAAO,EAAEJ,KAAK,CAACK;UAAtE;YAAA;YAAA;YAAA;UAAA,QAFJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAKI;UAAG,SAAS,EAAC,kBAAb;UAAA,UAAiCJ,QAAQ,CAACK;QAA1C;UAAA;UAAA;UAAA;QAAA,QALJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALJ,eAYI;QAAQ,SAAS,EAAC,qBAAlB;QAAwC,IAAI,EAAC,QAA7C;QAAsD,OAAO,EAAEN,KAAK,CAACO;MAArE;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAeI;MAAS,SAAS,EAAC,UAAnB;MAAA,UAEKP,KAAK,CAACQ,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAI;QACrB,oBAAO,QAAC,IAAD;UAEH,EAAE,EAAEA,IAAI,CAACC,GAFN;UAGH,IAAI,EAAED,IAAI,CAACN,IAHR;UAIH,GAAG,EAAEM,IAAI,CAACE,IAJP;UAKH,KAAK,EAAEF,IAAI,CAACG,KALT;UAMH,YAAY,EAAEb,KAAK,CAACc,WANjB;UAOH,UAAU,EAAEd,KAAK,CAACe,UAPf;UAQH,YAAY,EAAEf,KAAK,CAACgB;QARjB,GACEN,IAAI,CAACC,GADP;UAAA;UAAA;UAAA;QAAA,QAAP;MAUH,CAXA;IAFL;MAAA;MAAA;MAAA;IAAA,QAfJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiCH;;KA5GQZ,I;AA8GT,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}