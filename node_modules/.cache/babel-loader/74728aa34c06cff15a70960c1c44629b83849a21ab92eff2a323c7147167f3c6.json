{"ast":null,"code":"class Auth {\n  constructor(data) {\n    this.host = data.host;\n  }\n\n  //пробросить данные для регистрации через АПИ\n  register(data) {\n    return fetch(`${this.host}/signup`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: data.password,\n        email: data.email\n      })\n    }).then(res => res.json()).catch(err => console.log(err));\n  }\n  //пробросить данные из инпутов и отправить на сервер для авторизации пользователя\n  login(dataUser) {\n    return fetch(`${this.host}/signin`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        password: dataUser.password,\n        email: dataUser.email\n      })\n    }).then(res => {\n      return res.json();\n    }).catch(err => console.log(err));\n  }\n  //запрос на сервер для авторизации\n  getToken(tkn) {\n    return fetch(`${this.host}/users/me`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${tkn}`\n      }\n    }).then(res => res.json()).catch(err => console.log(err));\n  }\n}\nconst auth = new Auth({\n  host: 'https://auth.nomoreparties.co'\n});\nexport default auth;","map":{"version":3,"names":["Auth","constructor","data","host","register","fetch","method","headers","body","JSON","stringify","password","email","then","res","json","catch","err","console","log","login","dataUser","getToken","tkn","auth"],"sources":["C:/Users/vyach/dev/react-mesto-auth/src/utils/Auth.js"],"sourcesContent":["class Auth {\r\n    constructor(data) {\r\n        this.host = data.host;\r\n    }\r\n\r\n    //пробросить данные для регистрации через АПИ\r\n    register(data) {\r\n        return fetch(`${this.host}/signup`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                password: data.password,\r\n                email: data.email,\r\n            })\r\n        }).then((res) => res.json())\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    //пробросить данные из инпутов и отправить на сервер для авторизации пользователя\r\n    login(dataUser) {\r\n        return fetch(`${this.host}/signin`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                password: dataUser.password,\r\n                email: dataUser.email,\r\n            })\r\n        }).then((res) => { return res.json() })\r\n            .catch((err) => console.log(err))\r\n    };\r\n\r\n    //запрос на сервер для авторизации\r\n    getToken(tkn) {\r\n        return fetch(`${this.host}/users/me`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${tkn}`,\r\n            }\r\n        }).then((res) => res.json())\r\n            .catch((err) => console.log(err))\r\n    }\r\n\r\n}\r\n\r\nconst auth = new Auth({\r\n    host: 'https://auth.nomoreparties.co',\r\n});\r\n\r\nexport default auth;"],"mappings":"AAAA,MAAMA,IAAI,CAAC;EACPC,WAAW,CAACC,IAAI,EAAE;IACd,IAAI,CAACC,IAAI,GAAGD,IAAI,CAACC,IAAI;EACzB;;EAEA;EACAC,QAAQ,CAACF,IAAI,EAAE;IACX,OAAOG,KAAK,CAAE,GAAE,IAAI,CAACF,IAAK,SAAQ,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAET,IAAI,CAACS,QAAQ;QACvBC,KAAK,EAAEV,IAAI,CAACU;MAChB,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACzC;EAEA;EACAG,KAAK,CAACC,QAAQ,EAAE;IACZ,OAAOhB,KAAK,CAAE,GAAE,IAAI,CAACF,IAAK,SAAQ,EAAE;MAChCG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACjBC,QAAQ,EAAEU,QAAQ,CAACV,QAAQ;QAC3BC,KAAK,EAAES,QAAQ,CAACT;MACpB,CAAC;IACL,CAAC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAAE,OAAOA,GAAG,CAACC,IAAI,EAAE;IAAC,CAAC,CAAC,CAClCC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACzC;EAEA;EACAK,QAAQ,CAACC,GAAG,EAAE;IACV,OAAOlB,KAAK,CAAE,GAAE,IAAI,CAACF,IAAK,WAAU,EAAE;MAClCG,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE,kBAAkB;QAC5B,cAAc,EAAE,kBAAkB;QAClC,eAAe,EAAG,UAASgB,GAAI;MACnC;IACJ,CAAC,CAAC,CAACV,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBC,KAAK,CAAEC,GAAG,IAAKC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC,CAAC;EACzC;AAEJ;AAEA,MAAMO,IAAI,GAAG,IAAIxB,IAAI,CAAC;EAClBG,IAAI,EAAE;AACV,CAAC,CAAC;AAEF,eAAeqB,IAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}