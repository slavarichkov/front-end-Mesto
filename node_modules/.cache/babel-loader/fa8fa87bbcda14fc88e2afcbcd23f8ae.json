{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vyach\\\\dev\\\\react-mesto-auth\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom';\nimport Header from './Header';\nimport Main from './Main';\nimport Footer from './Footer';\nimport PopupWithForm from './PopupWithForm';\nimport ImagePopup from './ImagePopup';\nimport currentUserContext from '../contexts/CurrentUserContext';\nimport api from '../utils/Api';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup';\nimport Spinner from './Spinner';\nimport Login from './Login';\nimport Register from './Register';\nimport InfoTooltip from './InfoTooltip';\nimport auth from '../utils/Auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isDeletePlacePopupOpen, setIsDeletePlace] = useState(false);\n  const [isImagePopupOpened, setIsImagePopupOpened] = useState(false);\n  const [selectedCard, setSelectedCard] = useState({});\n  const [currentUser, setCurrentUser] = useState({});\n  const [cards, setCards] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(true);\n  const [isRegisterPopupOpened, setIsRegisterPopupOpened] = useState(false);\n  const [isAuthUnsuccessfull, setIsAuthUserUnsuccessfull] = useState(false);\n  const [registerIn, setRegisterIn] = useState(false);\n  const [textErrorRegister, setTextErrorRegister] = useState('');\n  const popupClosedState = [// необходимо для использования в useEffect и закрытия попапов\n  isEditAvatarPopupOpen, isAddPlacePopupOpen, isDeletePlacePopupOpen, isEditProfilePopupOpen, isImagePopupOpened, isRegisterPopupOpened, isAuthUnsuccessfull]; //...Работа с Апи(получение и редактирование инф на сервере: данные пользователя, карточки)...\n  //пробросить данные из EditProfilePopup наверх для Апи и обновления стейта currentUser\n\n  function handleUpdateUser(data) {\n    setLoading(true);\n    api.sendUserInfo(data).then(dataUser => {\n      setCurrentUser(dataUser);\n      setIsEditProfilePopupOpen(false);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  } //пробросить данные для обновления аватара и отправки на сервер\n\n\n  function handleUpdateAvatar(data) {\n    setLoading(true);\n    api.sendAvatar(data).then(dataAvatar => {\n      setCurrentUser(dataAvatar);\n      setIsEditAvatarPopupOpen(false);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  } // запрос данных пользователя и карточек с сервера\n\n\n  useEffect(() => {\n    setLoading(true);\n    api.getUserInfo().then(infoUser => {\n      setCurrentUser(infoUser);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  }, []); // запрос данных пользователя и карточек с сервера\n\n  useEffect(() => {\n    setLoading(true);\n    api.getImages().then(initialCards => {\n      setCards(initialCards);\n      setLoading(false);\n    }).catch(err => {\n      setLoading(false);\n      console.log(err);\n    });\n  }, []); //...Работа с попапами...\n  // функции открытия попапов\n\n  function handleEditAvatarClick() {\n    setIsEditAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setIsEditProfilePopupOpen(true);\n  }\n\n  function handleAddPlaceClick() {\n    setIsAddPlacePopupOpen(true);\n  }\n\n  function handleDeletePlaceClick() {\n    // в процессе реализации\n    setIsDeletePlace(true);\n  }\n\n  function handleCardClick(dataCard) {\n    setIsImagePopupOpened(true);\n    setSelectedCard(dataCard); //пробросить данные открытой карточки из Card для добавления в попап масштабируемого изображения\n  } // функция закрытия попапов\n\n\n  function closeAllPopups(e) {\n    e.preventDefault();\n    setIsEditProfilePopupOpen(false);\n    setIsEditAvatarPopupOpen(false);\n    setIsAddPlacePopupOpen(false);\n    setIsDeletePlace(false);\n    setIsImagePopupOpened(false);\n    setIsRegisterPopupOpened(false);\n    setIsAuthUserUnsuccessfull(false);\n  } //закрыть на Esc\n\n\n  function handleCloseAllPopupsEcs(e) {\n    if (e.key === \"Escape\") {\n      closeAllPopups(e);\n    }\n  } //закрыть на оверлей\n\n\n  function handleCloseAllPopupsClickOverlay(e) {\n    if (e.target.classList.contains('popup_overlay')) {\n      closeAllPopups(e);\n    }\n  } //Слушатели на закрытие попапов по Esc или клику на оверлей\n\n\n  useEffect(() => {\n    if (popupClosedState.includes(true)) {\n      document.addEventListener('click', handleCloseAllPopupsClickOverlay);\n      document.addEventListener('keydown', handleCloseAllPopupsEcs);\n      return () => {\n        document.removeEventListener('click', handleCloseAllPopupsClickOverlay);\n        document.removeEventListener('keydown', handleCloseAllPopupsEcs);\n      };\n    }\n  }, [popupClosedState]); // ...Работа с карточками...\n  // управлять лайком\n\n  function handleCardLike(cardId, likes) {\n    const isLiked = likes.some(i => i._id === currentUser._id); // проверяем, есть ли уже лайк на этой карточке\n    //Отправляем запрос в API и получаем обновлённые данные карточки\n\n    if (!isLiked) {\n      setLoading(true);\n      api.addLike(cardId).then(newCard => {\n        setLoading(false);\n        setCards(cards => cards.map(c => c._id === cardId ? newCard : c));\n      }).catch(err => {\n        setLoading(false);\n        console.log(err);\n      }); // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\n    } else {\n      setLoading(true);\n      api.deleteLike(cardId).then(newCard => {\n        setLoading(false);\n        setCards(cards => cards.map(c => c._id === cardId ? newCard : c));\n      }).catch(err => {\n        setLoading(false);\n        console.log(err);\n      });\n    }\n  } //удаление карточки\n\n\n  function handleCardDelete(cardId) {\n    setLoading(true);\n    api.deleteCard(cardId).then(() => {\n      setLoading(false);\n      setCards(cards => cards.filter(c => c._id !== cardId));\n    }).catch(err => {\n      console.log(err);\n    });\n  } //отправка карточки на сервер и обновление стейта для отрисовки \n\n\n  function handleAddPlaceSubmit(data) {\n    setLoading(true);\n    api.sendImages(data).then(newCard => {\n      setCards([newCard, ...cards]);\n      setIsAddPlacePopupOpen(false);\n      setLoading(false);\n    }).catch(err => {\n      console.log(err);\n      setLoading(false);\n    });\n  } //...Регистрация и Авторизация...\n  //пробросить данные для регистрации через АПИ\n\n\n  function handleRegister(data) {\n    auth.register(data).then(data => {\n      console.log(data); //записать в переменную ошибку -> вывести в инф.окно\n\n      let messageError = data.message;\n\n      if (Object.keys(data).includes('message')) {\n        messageError = data.message;\n      } else if (Object.keys(data).includes('error')) {\n        messageError = data.error;\n      } //проверить ответ сервера на содержание, есть ли ошибки\n\n\n      if (Object.keys(data).includes('message') || Object.keys(data).includes('error')) {\n        setTextErrorRegister(messageError); // передать текст ошибки в инф.окно\n\n        setIsAuthUserUnsuccessfull(true);\n      } else {\n        setIsRegisterPopupOpened(true); // при положительном ответе открыть попап подверждения регистрации\n\n        setTimeout(() => {\n          // закрыть подверждение через 3 сек.\n          setIsRegisterPopupOpened(false);\n          setRegisterIn(false);\n        }, 3000);\n        setRegisterIn(true);\n      }\n    }).catch(err => {\n      console.log(err);\n      setIsAuthUserUnsuccessfull(false);\n    });\n  }\n\n  ; //пробросить данные для регистрации через АПИ\n\n  function handleRegister(data) {\n    auth.register(data).then(data => {//что-то делаем\n    }).catch(err => {\n      console.log(err); //выводим в консоль уже здесь, но сюда не придет, если в \n    });\n  }\n\n  ; //пробросить данные из инпутов и отправить на сервер для авторизации пользователя\n\n  function handleLogin(dataUser) {\n    auth.login(dataUser).then(data => {\n      if (data.message === 'Incorrect email address or password') {\n        setIsAuthUserUnsuccessfull(true);\n        setTextErrorRegister(data.message); // передать текст ошибки в инф.окно\n      } else {\n        localStorage.setItem('token', data.token);\n        localStorage.setItem(\"email\", dataUser.email);\n        getAuth(data.token);\n      }\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  ; //запрос на сервер для авторизации\n\n  function getAuth(tkn) {\n    auth.getToken(tkn).then(() => {\n      setLoggedIn(true);\n    }).catch(err => {\n      console.log(err);\n      setIsAuthUserUnsuccessfull(false);\n    });\n  } //валидация токена\n\n\n  function tokenCheck() {\n    const jwt = localStorage.getItem('token');\n\n    if (jwt !== null) {\n      setLoggedIn(true);\n      getAuth(jwt);\n    } else {\n      setLoggedIn(false);\n    }\n  } //проверка авторизации пользователя\n\n\n  useEffect(() => {\n    tokenCheck(localStorage.getItem('token'));\n  }, [loggedIn]); // выйти из аккаунта (пробрасывается из Header) \n\n  function handleLogginOut(data) {\n    setLoggedIn(data);\n    localStorage.clear();\n  }\n\n  return /*#__PURE__*/_jsxDEV(currentUserContext.Provider, {\n    value: currentUser,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        handleLoggedInStateChanged: handleLogginOut\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-in\",\n          children: loggedIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this) : /*#__PURE__*/_jsxDEV(Login, {\n            onLogin: handleLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 47\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/sign-up\",\n          children: registerIn ? /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 27\n          }, this) : /*#__PURE__*/_jsxDEV(Register, {\n            onRegister: handleRegister\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 56\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), loggedIn ? /*#__PURE__*/_jsxDEV(Main, {\n            onEditAvatar: handleEditAvatarClick,\n            onEditProfile: handleEditProfileClick,\n            onAddPlace: handleAddPlaceClick,\n            onCardClick: handleCardClick,\n            cards: cards,\n            onCardLike: handleCardLike,\n            onCardDelete: handleCardDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Redirect, {\n            to: \"/sign-in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 20\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        loggedIn: loggedIn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InfoTooltip, {\n        isRegister: isRegisterPopupOpened,\n        isClose: closeAllPopups,\n        isAuth: isAuthUnsuccessfull,\n        textError: textErrorRegister\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditProfilePopup, {\n        isOpen: isEditProfilePopupOpen,\n        isClose: closeAllPopups,\n        onUpdateUser: handleUpdateUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AddPlacePopup, {\n        isOpen: isAddPlacePopupOpen,\n        isClose: closeAllPopups,\n        onAddPlace: handleAddPlaceSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditAvatarPopup, {\n        isOpen: isEditAvatarPopupOpen,\n        isClose: closeAllPopups,\n        onUpdateAvatar: handleUpdateAvatar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PopupWithForm, {\n        name: \"popup_card_remove\",\n        text: \"\\u0412\\u044B \\u0443\\u0432\\u0435\\u0440\\u0435\\u043D\\u044B?\",\n        isOpen: isDeletePlacePopupOpen,\n        isClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n        isOpen: isImagePopupOpened,\n        name: selectedCard.name,\n        link: selectedCard.src,\n        onClose: closeAllPopups\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 322,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"4wCBCNCkBV/rWCUPNWjXHgS8sqk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Route","Switch","Redirect","Header","Main","Footer","PopupWithForm","ImagePopup","currentUserContext","api","EditProfilePopup","EditAvatarPopup","AddPlacePopup","Spinner","Login","Register","InfoTooltip","auth","App","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isDeletePlacePopupOpen","setIsDeletePlace","isImagePopupOpened","setIsImagePopupOpened","selectedCard","setSelectedCard","currentUser","setCurrentUser","cards","setCards","loading","setLoading","loggedIn","setLoggedIn","isRegisterPopupOpened","setIsRegisterPopupOpened","isAuthUnsuccessfull","setIsAuthUserUnsuccessfull","registerIn","setRegisterIn","textErrorRegister","setTextErrorRegister","popupClosedState","handleUpdateUser","data","sendUserInfo","then","dataUser","catch","err","console","log","handleUpdateAvatar","sendAvatar","dataAvatar","getUserInfo","infoUser","getImages","initialCards","handleEditAvatarClick","handleEditProfileClick","handleAddPlaceClick","handleDeletePlaceClick","handleCardClick","dataCard","closeAllPopups","e","preventDefault","handleCloseAllPopupsEcs","key","handleCloseAllPopupsClickOverlay","target","classList","contains","includes","document","addEventListener","removeEventListener","handleCardLike","cardId","likes","isLiked","some","i","_id","addLike","newCard","map","c","deleteLike","handleCardDelete","deleteCard","filter","handleAddPlaceSubmit","sendImages","handleRegister","register","messageError","message","Object","keys","error","setTimeout","handleLogin","login","localStorage","setItem","token","email","getAuth","tkn","getToken","tokenCheck","jwt","getItem","handleLogginOut","clear","name","src"],"sources":["C:/Users/vyach/dev/react-mesto-auth/src/components/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport currentUserContext from '../contexts/CurrentUserContext';\r\nimport api from '../utils/Api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Spinner from './Spinner';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport auth from '../utils/Auth';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isDeletePlacePopupOpen, setIsDeletePlace] = useState(false);\r\n  const [isImagePopupOpened, setIsImagePopupOpened] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n  const [isRegisterPopupOpened, setIsRegisterPopupOpened] = useState(false);\r\n  const [isAuthUnsuccessfull, setIsAuthUserUnsuccessfull] = useState(false);\r\n  const [registerIn, setRegisterIn] = useState(false);\r\n  const [textErrorRegister, setTextErrorRegister] = useState('');\r\n  const popupClosedState = [  // необходимо для использования в useEffect и закрытия попапов\r\n    isEditAvatarPopupOpen,\r\n    isAddPlacePopupOpen,\r\n    isDeletePlacePopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isImagePopupOpened,\r\n    isRegisterPopupOpened,\r\n    isAuthUnsuccessfull\r\n  ];\r\n\r\n  //...Работа с Апи(получение и редактирование инф на сервере: данные пользователя, карточки)...\r\n\r\n  //пробросить данные из EditProfilePopup наверх для Апи и обновления стейта currentUser\r\n  function handleUpdateUser(data) {\r\n    setLoading(true);\r\n    api.sendUserInfo(data)\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser);\r\n        setIsEditProfilePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //пробросить данные для обновления аватара и отправки на сервер\r\n  function handleUpdateAvatar(data) {\r\n    setLoading(true);\r\n    api.sendAvatar(data)\r\n      .then((dataAvatar) => {\r\n        setCurrentUser(dataAvatar);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getUserInfo()\r\n      .then((infoUser) => {\r\n        setCurrentUser(infoUser);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, [])\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getImages()\r\n      .then((initialCards) => {\r\n        setCards(initialCards);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  //...Работа с попапами...\r\n\r\n  // функции открытия попапов\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleDeletePlaceClick() { // в процессе реализации\r\n    setIsDeletePlace(true);\r\n  }\r\n\r\n  function handleCardClick(dataCard) {\r\n    setIsImagePopupOpened(true);\r\n    setSelectedCard(dataCard); //пробросить данные открытой карточки из Card для добавления в попап масштабируемого изображения\r\n  }\r\n\r\n  // функция закрытия попапов\r\n  function closeAllPopups(e) {\r\n    e.preventDefault();\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsDeletePlace(false);\r\n    setIsImagePopupOpened(false);\r\n    setIsRegisterPopupOpened(false);\r\n    setIsAuthUserUnsuccessfull(false)\r\n  }\r\n\r\n  //закрыть на Esc\r\n  function handleCloseAllPopupsEcs(e) {\r\n    if (e.key === \"Escape\") {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //закрыть на оверлей\r\n  function handleCloseAllPopupsClickOverlay(e) {\r\n    if (e.target.classList.contains('popup_overlay')) {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //Слушатели на закрытие попапов по Esc или клику на оверлей\r\n  useEffect(() => {\r\n    if (\r\n      popupClosedState.includes(true)\r\n    ) {\r\n      document.addEventListener('click', handleCloseAllPopupsClickOverlay);\r\n      document.addEventListener('keydown', handleCloseAllPopupsEcs);\r\n      return () => {\r\n        document.removeEventListener('click', handleCloseAllPopupsClickOverlay);\r\n        document.removeEventListener('keydown', handleCloseAllPopupsEcs);\r\n      }\r\n    }\r\n  }, [popupClosedState]);\r\n\r\n  // ...Работа с карточками...\r\n\r\n  // управлять лайком\r\n  function handleCardLike(cardId, likes) {\r\n    const isLiked = likes.some(i => i._id === currentUser._id); // проверяем, есть ли уже лайк на этой карточке\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    if (!isLiked) {\r\n      setLoading(true);\r\n      api.addLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        }) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\r\n    } else {\r\n      setLoading(true);\r\n      api.deleteLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  //удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    setLoading(true);\r\n    api.deleteCard(cardId)\r\n      .then(() => {\r\n        setLoading(false);\r\n        setCards((cards) => cards.filter((c) => c._id !== cardId))\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //отправка карточки на сервер и обновление стейта для отрисовки \r\n  function handleAddPlaceSubmit(data) {\r\n    setLoading(true);\r\n    api.sendImages(data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        setIsAddPlacePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  //...Регистрация и Авторизация...\r\n\r\n  //пробросить данные для регистрации через АПИ\r\n  function handleRegister(data) {\r\n    auth.register(data)\r\n      .then((data) => {\r\n        console.log(data);\r\n        //записать в переменную ошибку -> вывести в инф.окно\r\n        let messageError = data.message;\r\n        if (Object.keys(data).includes('message')) { messageError = data.message }\r\n        else if (Object.keys(data).includes('error')) { messageError = data.error }\r\n        //проверить ответ сервера на содержание, есть ли ошибки\r\n        if (Object.keys(data).includes('message') || Object.keys(data).includes('error')) {\r\n          setTextErrorRegister(messageError); // передать текст ошибки в инф.окно\r\n          setIsAuthUserUnsuccessfull(true)\r\n        } else {\r\n          setIsRegisterPopupOpened(true); // при положительном ответе открыть попап подверждения регистрации\r\n          setTimeout(() => { // закрыть подверждение через 3 сек.\r\n            setIsRegisterPopupOpened(false);\r\n            setRegisterIn(false);\r\n          }, 3000);\r\n          setRegisterIn(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsAuthUserUnsuccessfull(false);\r\n      });\r\n  };\r\n\r\n  //пробросить данные для регистрации через АПИ\r\n  function handleRegister(data) {\r\n    auth.register(data)\r\n      .then((data) => {\r\n       //что-то делаем\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        //выводим в консоль уже здесь, но сюда не придет, если в \r\n      });\r\n  };\r\n\r\n  //пробросить данные из инпутов и отправить на сервер для авторизации пользователя\r\n  function handleLogin(dataUser) {\r\n    auth.login(dataUser)\r\n      .then((data) => {\r\n        if (data.message === 'Incorrect email address or password') {\r\n          setIsAuthUserUnsuccessfull(true);\r\n          setTextErrorRegister(data.message); // передать текст ошибки в инф.окно\r\n        } else {\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem(\"email\", dataUser.email);\r\n          getAuth(data.token);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //запрос на сервер для авторизации\r\n  function getAuth(tkn) {\r\n    auth.getToken(tkn)\r\n      .then(() => {\r\n        setLoggedIn(true);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsAuthUserUnsuccessfull(false);\r\n      });\r\n  }\r\n\r\n  //валидация токена\r\n  function tokenCheck() {\r\n    const jwt = localStorage.getItem('token');\r\n    if (jwt !== null) {\r\n      setLoggedIn(true);\r\n      getAuth(jwt);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n\r\n  //проверка авторизации пользователя\r\n  useEffect(() => {\r\n    tokenCheck(localStorage.getItem('token'));\r\n  }, [loggedIn])\r\n\r\n  // выйти из аккаунта (пробрасывается из Header) \r\n  function handleLogginOut(data) {\r\n    setLoggedIn(data);\r\n    localStorage.clear();\r\n  }\r\n\r\n  return (\r\n    <currentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header handleLoggedInStateChanged={handleLogginOut} />\r\n        <Switch>\r\n          {/* Авторизация пользователя */}\r\n          <Route path=\"/sign-in\">\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Login onLogin={handleLogin} />}\r\n          </Route>\r\n          {/* Регистрация нового пользователя */}\r\n          <Route path=\"/sign-up\">\r\n            {registerIn ? <Redirect to=\"/sign-in\" /> : <Register onRegister={handleRegister} />}\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {loading ? <Spinner /> : <></>}\r\n            {loggedIn ?\r\n              <Main onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cards}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n              /> : <Redirect to=\"/sign-in\" />}\r\n          </Route>\r\n        </Switch>\r\n        <Footer loggedIn={loggedIn} />\r\n        {/* Информационное окно об успешной регистрации */}\r\n        <InfoTooltip isRegister={isRegisterPopupOpened} isClose={closeAllPopups} isAuth={isAuthUnsuccessfull} textError={textErrorRegister} />\r\n        {/**  <!--Попап Редактирование профиля --> */}\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} isClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        {/** <!--Попап добавление изображений(карточек) пользователем --> */}\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} isClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        {/** <!--Попап форма редактирования аватара --> */}\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} isClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        {/** <!-- Попап подтверждения удаления карточки --> */}\r\n        <PopupWithForm name='popup_card_remove'\r\n          text='Вы уверены?'\r\n          isOpen={isDeletePlacePopupOpen}\r\n          isClose={closeAllPopups} />\r\n        {/** <!--Попап Масштабированное изображение --> */}\r\n        < ImagePopup isOpen={isImagePopupOpened}\r\n          name={selectedCard.name}\r\n          link={selectedCard.src}\r\n          onClose={closeAllPopups} />\r\n      </div>\r\n    </currentUserContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}