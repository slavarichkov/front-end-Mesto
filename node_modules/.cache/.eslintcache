[{"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\index.js":"1","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\reportWebVitals.js":"2","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\App.js":"3","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Main.js":"4","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Header.js":"5","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\ImagePopup.js":"6","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Footer.js":"7","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\PopupWithForm.js":"8","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Card.js":"9","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\utils\\Api.js":"10","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\contexts\\CurrentUserContext.js":"11","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\EditProfilePopup.js":"12","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\EditAvatarPopup.js":"13","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\AddPlacePopup.js":"14","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Spinner.js":"15","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\index.js":"16","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\reportWebVitals.js":"17","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\App.js":"18","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Header.js":"19","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Main.js":"20","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js":"21","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js":"22","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js":"23","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Footer.js":"24","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js":"25","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js":"26","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Spinner.js":"27","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\utils\\Api.js":"28","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js":"29","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Card.js":"30","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Login.js":"31","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Register.js":"32","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js":"33","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.js":"34","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\utils\\Auth.js":"35"},{"size":563,"mtime":1662755722423,"results":"36","hashOfConfig":"37"},{"size":375,"mtime":1662755722424,"results":"38","hashOfConfig":"37"},{"size":8591,"mtime":1663609980503,"results":"39","hashOfConfig":"37"},{"size":1962,"mtime":1663511031257,"results":"40","hashOfConfig":"37"},{"size":284,"mtime":1662755722414,"results":"41","hashOfConfig":"37"},{"size":589,"mtime":1663099406535,"results":"42","hashOfConfig":"37"},{"size":252,"mtime":1662997246307,"results":"43","hashOfConfig":"37"},{"size":969,"mtime":1663595139516,"results":"44","hashOfConfig":"37"},{"size":1983,"mtime":1663511892203,"results":"45","hashOfConfig":"37"},{"size":3288,"mtime":1663586941931,"results":"46","hashOfConfig":"37"},{"size":119,"mtime":1663315598765,"results":"47","hashOfConfig":"37"},{"size":3039,"mtime":1663592783580,"results":"48","hashOfConfig":"37"},{"size":1650,"mtime":1663596199184,"results":"49","hashOfConfig":"37"},{"size":2857,"mtime":1663596239084,"results":"50","hashOfConfig":"37"},{"size":178,"mtime":1663601369068,"results":"51","hashOfConfig":"37"},{"size":659,"mtime":1666278902661,"results":"52","hashOfConfig":"53"},{"size":375,"mtime":1662755722424,"results":"54","hashOfConfig":"53"},{"size":13616,"mtime":1673244130318,"results":"55","hashOfConfig":"53"},{"size":1340,"mtime":1668597184064,"results":"56","hashOfConfig":"53"},{"size":1962,"mtime":1664992282104,"results":"57","hashOfConfig":"53"},{"size":1213,"mtime":1667408298781,"results":"58","hashOfConfig":"53"},{"size":589,"mtime":1663099406535,"results":"59","hashOfConfig":"53"},{"size":3104,"mtime":1665078494508,"results":"60","hashOfConfig":"53"},{"size":295,"mtime":1667139302711,"results":"61","hashOfConfig":"53"},{"size":2942,"mtime":1667403957419,"results":"62","hashOfConfig":"53"},{"size":1702,"mtime":1669213212187,"results":"63","hashOfConfig":"53"},{"size":178,"mtime":1663601369068,"results":"64","hashOfConfig":"53"},{"size":3288,"mtime":1668260757033,"results":"65","hashOfConfig":"53"},{"size":119,"mtime":1663315598765,"results":"66","hashOfConfig":"53"},{"size":1983,"mtime":1663511892203,"results":"67","hashOfConfig":"53"},{"size":2752,"mtime":1667658856032,"results":"68","hashOfConfig":"53"},{"size":3001,"mtime":1667582346840,"results":"69","hashOfConfig":"53"},{"size":620,"mtime":1665148750838,"results":"70","hashOfConfig":"71"},{"size":1950,"mtime":1667820571514,"results":"72","hashOfConfig":"53"},{"size":1726,"mtime":1668691834395,"results":"73","hashOfConfig":"53"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"1654jje",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"88","messages":"89","suppressedMessages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"97","usedDeprecatedRules":"77"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ljeebo",{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","suppressedMessages":"143","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","suppressedMessages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"150"},{"filePath":"151","messages":"152","suppressedMessages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","suppressedMessages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"160","messages":"161","suppressedMessages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","suppressedMessages":"168","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"169","messages":"170","suppressedMessages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","suppressedMessages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","suppressedMessages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1gddm6s",{"filePath":"178","messages":"179","suppressedMessages":"180","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"181"},{"filePath":"182","messages":"183","suppressedMessages":"184","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\index.js",[],[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\reportWebVitals.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\App.js",["185","186"],[],"import React, { useState, useEffect } from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport currentUserContext from '../contexts/CurrentUserContext';\r\nimport api from '../utils/Api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Spinner from './Spinner';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isDeletePlacePopupOpen, setIsDeletePlace] = useState(false);\r\n  const [isImagePopupOpened, setIsImagePopupOpened] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // функции открытия попапов\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleDeletePlaceClick() {\r\n    setIsDeletePlace(true);\r\n  }\r\n\r\n  function handleCardClick(dataCard) {\r\n    setIsImagePopupOpened(true);\r\n    setSelectedCard(dataCard); //пробросить данные открытой карточки из Card для добавления в попап масштабируемого изображения\r\n  }\r\n\r\n  // функция закрытия попапов\r\n  function closeAllPopups(e) {\r\n    e.preventDefault();\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsDeletePlace(false);\r\n    setIsImagePopupOpened(false);\r\n  }\r\n\r\n  //закрыть на Esc\r\n  function handleCloseAllPopupsEcs(e) {\r\n    if (e.key === \"Escape\") {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //закрыть на оверлей\r\n  function handleCloseAllPopupsClickOverlay(e) {\r\n    if (e.target.classList.contains('popup_overlay')) {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //пробросить данные из EditProfilePopup наверх для Апи и обновления стейта currentUser\r\n  function handleUpdateUser(data) {\r\n    setLoading(true);\r\n    api.sendUserInfo(data)\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser);\r\n        setIsEditProfilePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //пробросить данные для обновления аватара и отправки на сервер\r\n  function handleUpdateAvatar(data) {\r\n    setLoading(true);\r\n    api.sendAvatar(data)\r\n      .then((dataAvatar) => {\r\n        setCurrentUser(dataAvatar);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getUserInfo()\r\n      .then((infoUser) => {\r\n        setCurrentUser(infoUser);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, [])\r\n\r\n  //Слушатели на закрытие попапов по Esc или клику на оверлей\r\n  useEffect(() => {\r\n    if (\r\n      [isEditAvatarPopupOpen, isAddPlacePopupOpen, isDeletePlacePopupOpen, isEditProfilePopupOpen, isImagePopupOpened].includes(true)\r\n    ) {\r\n      document.addEventListener('click', handleCloseAllPopupsClickOverlay);\r\n      document.addEventListener('keydown', handleCloseAllPopupsEcs);\r\n      return () => {\r\n        document.removeEventListener('click', handleCloseAllPopupsClickOverlay);\r\n        document.removeEventListener('keydown', handleCloseAllPopupsEcs);\r\n      }\r\n    }\r\n  }, [isEditAvatarPopupOpen, isAddPlacePopupOpen, isEditProfilePopupOpen, isDeletePlacePopupOpen, isImagePopupOpened]);\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getImages()\r\n      .then((initialCards) => {\r\n        setCards(initialCards);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  // управлять лайком\r\n  function handleCardLike(cardId, likes) {\r\n    const isLiked = likes.some(i => i._id === currentUser._id); // проверяем, есть ли уже лайк на этой карточке\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    if (!isLiked) {\r\n      setLoading(true);\r\n      api.addLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        }) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\r\n    } else {\r\n      setLoading(true);\r\n      api.deleteLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  //удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    setLoading(true);\r\n    api.deleteCard(cardId)\r\n      .then((newCard) => {\r\n        setLoading(false);\r\n        setCards((cards) => cards.filter((c) => c._id !== cardId))\r\n          .catch((err) => {\r\n            console.log(err);\r\n          })\r\n      })\r\n  }\r\n\r\n  //отправка карточки на сервер и обновление стейта для отрисовки \r\n  function handleAddPlaceSubmit(data) {\r\n    setLoading(true);\r\n    api.sendImages(data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        setIsAddPlacePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  return (\r\n    <currentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header />\r\n        {loading ? <Spinner /> : <></>}\r\n        <Main onEditAvatar={handleEditAvatarClick}\r\n          onEditProfile={handleEditProfileClick}\r\n          onAddPlace={handleAddPlaceClick}\r\n          onCardClick={handleCardClick}\r\n          cards={cards}\r\n          onCardLike={handleCardLike}\r\n          onCardDelete={handleCardDelete}\r\n        />\r\n        <Footer />\r\n        {/**  <!--Попап Редактирование профиля --> */}\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} isClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        {/** <!--Попап добавление изображений(карточек) пользователем --> */}\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} isClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        {/** <!--Попап форма редактирования аватара --> */}\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        {/** <!-- Попап подтверждения удаления карточки --> */}\r\n        <PopupWithForm name='popup_card_remove'\r\n          text='Вы уверены?'\r\n          isOpen={isDeletePlacePopupOpen}\r\n          isClose={closeAllPopups} />\r\n        {/** <!--Попап Масштабированное изображение --> */}\r\n        < ImagePopup isOpen={isImagePopupOpened}\r\n          name={selectedCard.name}\r\n          link={selectedCard.src}\r\n          onClose={closeAllPopups} />\r\n      </div>\r\n    </currentUserContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Main.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Header.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Footer.js",["187"],[],"import React from 'react';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copyright\">&copy; {(new Date).getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\PopupWithForm.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Card.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\utils\\Api.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\EditProfilePopup.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\EditAvatarPopup.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\AddPlacePopup.js",[],[],"C:\\Users\\vyach\\dev\\mesto-react-1\\src\\components\\Spinner.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\index.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\reportWebVitals.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\App.js",["188","189","190"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Route, Switch, Redirect } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport currentUserContext from '../contexts/CurrentUserContext';\r\nimport api from '../utils/Api';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\nimport Spinner from './Spinner';\r\nimport Login from './Login';\r\nimport Register from './Register';\r\nimport InfoTooltip from './InfoTooltip';\r\nimport auth from '../utils/Auth';\r\n\r\nfunction App() {\r\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\r\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\r\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\r\n  const [isDeletePlacePopupOpen, setIsDeletePlace] = useState(false);\r\n  const [isImagePopupOpened, setIsImagePopupOpened] = useState(false);\r\n  const [selectedCard, setSelectedCard] = useState({});\r\n  const [currentUser, setCurrentUser] = useState({});\r\n  const [cards, setCards] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [loggedIn, setLoggedIn] = useState(true);\r\n  const [isRegisterPopupOpened, setIsRegisterPopupOpened] = useState(false);\r\n  const [isAuthUnsuccessfull, setIsAuthUserUnsuccessfull] = useState(false);\r\n  const [registerIn, setRegisterIn] = useState(false);\r\n  const [textErrorRegister, setTextErrorRegister] = useState('');\r\n  const popupClosedState = [  // необходимо для использования в useEffect и закрытия попапов\r\n    isEditAvatarPopupOpen,\r\n    isAddPlacePopupOpen,\r\n    isDeletePlacePopupOpen,\r\n    isEditProfilePopupOpen,\r\n    isImagePopupOpened,\r\n    isRegisterPopupOpened,\r\n    isAuthUnsuccessfull\r\n  ];\r\n\r\n  //...Работа с Апи(получение и редактирование инф на сервере: данные пользователя, карточки)...\r\n\r\n  //пробросить данные из EditProfilePopup наверх для Апи и обновления стейта currentUser\r\n  function handleUpdateUser(data) {\r\n    setLoading(true);\r\n    api.sendUserInfo(data)\r\n      .then((dataUser) => {\r\n        setCurrentUser(dataUser);\r\n        setIsEditProfilePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      });\r\n  }\r\n\r\n  //пробросить данные для обновления аватара и отправки на сервер\r\n  function handleUpdateAvatar(data) {\r\n    setLoading(true);\r\n    api.sendAvatar(data)\r\n      .then((dataAvatar) => {\r\n        setCurrentUser(dataAvatar);\r\n        setIsEditAvatarPopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getUserInfo()\r\n      .then((infoUser) => {\r\n        setCurrentUser(infoUser);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, [])\r\n\r\n  // запрос данных пользователя и карточек с сервера\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    api.getImages()\r\n      .then((initialCards) => {\r\n        setCards(initialCards);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        setLoading(false);\r\n        console.log(err);\r\n      })\r\n  }, []);\r\n\r\n  //...Работа с попапами...\r\n\r\n  // функции открытия попапов\r\n  function handleEditAvatarClick() {\r\n    setIsEditAvatarPopupOpen(true)\r\n  }\r\n\r\n  function handleEditProfileClick() {\r\n    setIsEditProfilePopupOpen(true);\r\n  }\r\n\r\n  function handleAddPlaceClick() {\r\n    setIsAddPlacePopupOpen(true);\r\n  }\r\n\r\n  function handleDeletePlaceClick() { // в процессе реализации\r\n    setIsDeletePlace(true);\r\n  }\r\n\r\n  function handleCardClick(dataCard) {\r\n    setIsImagePopupOpened(true);\r\n    setSelectedCard(dataCard); //пробросить данные открытой карточки из Card для добавления в попап масштабируемого изображения\r\n  }\r\n\r\n  // функция закрытия попапов\r\n  function closeAllPopups(e) {\r\n    e.preventDefault();\r\n    setIsEditProfilePopupOpen(false);\r\n    setIsEditAvatarPopupOpen(false);\r\n    setIsAddPlacePopupOpen(false);\r\n    setIsDeletePlace(false);\r\n    setIsImagePopupOpened(false);\r\n    setIsRegisterPopupOpened(false);\r\n    setIsAuthUserUnsuccessfull(false)\r\n  }\r\n\r\n  //закрыть на Esc\r\n  function handleCloseAllPopupsEcs(e) {\r\n    if (e.key === \"Escape\") {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //закрыть на оверлей\r\n  function handleCloseAllPopupsClickOverlay(e) {\r\n    if (e.target.classList.contains('popup_overlay')) {\r\n      closeAllPopups(e);\r\n    }\r\n  }\r\n\r\n  //Слушатели на закрытие попапов по Esc или клику на оверлей\r\n  useEffect(() => {\r\n    if (\r\n      popupClosedState.includes(true)\r\n    ) {\r\n      document.addEventListener('click', handleCloseAllPopupsClickOverlay);\r\n      document.addEventListener('keydown', handleCloseAllPopupsEcs);\r\n      return () => {\r\n        document.removeEventListener('click', handleCloseAllPopupsClickOverlay);\r\n        document.removeEventListener('keydown', handleCloseAllPopupsEcs);\r\n      }\r\n    }\r\n  }, [popupClosedState]);\r\n\r\n  // ...Работа с карточками...\r\n\r\n  // управлять лайком\r\n  function handleCardLike(cardId, likes) {\r\n    const isLiked = likes.some(i => i._id === currentUser._id); // проверяем, есть ли уже лайк на этой карточке\r\n    //Отправляем запрос в API и получаем обновлённые данные карточки\r\n    if (!isLiked) {\r\n      setLoading(true);\r\n      api.addLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        }) // данные карточки с лайком - стейт всех карточек -  мапом найти карточку с таким же айди, если нет, то новый стейт, если нет - не менять\r\n    } else {\r\n      setLoading(true);\r\n      api.deleteLike(cardId)\r\n        .then((newCard) => {\r\n          setLoading(false);\r\n          setCards((cards) => cards.map((c) => c._id === cardId ? newCard : c))\r\n        })\r\n        .catch((err) => {\r\n          setLoading(false);\r\n          console.log(err);\r\n        })\r\n    }\r\n  }\r\n\r\n  //удаление карточки\r\n  function handleCardDelete(cardId) {\r\n    setLoading(true);\r\n    api.deleteCard(cardId)\r\n      .then(() => {\r\n        setLoading(false);\r\n        setCards((cards) => cards.filter((c) => c._id !== cardId))\r\n      }).catch((err) => {\r\n        console.log(err);\r\n      })\r\n  }\r\n\r\n  //отправка карточки на сервер и обновление стейта для отрисовки \r\n  function handleAddPlaceSubmit(data) {\r\n    setLoading(true);\r\n    api.sendImages(data)\r\n      .then((newCard) => {\r\n        setCards([newCard, ...cards]);\r\n        setIsAddPlacePopupOpen(false);\r\n        setLoading(false);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setLoading(false);\r\n      })\r\n  }\r\n\r\n  //...Регистрация и Авторизация...\r\n\r\n  //пробросить данные для регистрации через АПИ\r\n  function handleRegister(data) {\r\n    auth.register(data)\r\n      .then((data) => {\r\n        //записать в переменную ошибку -> вывести в инф.окно\r\n        let messageError = data.message;\r\n        if (Object.keys(data).includes('message')) { messageError = data.message }\r\n        else if (Object.keys(data).includes('error')) { messageError = data.error }\r\n        //проверить ответ сервера на содержание, есть ли ошибки\r\n        if (Object.keys(data).includes('message') || Object.keys(data).includes('error')) {\r\n          setTextErrorRegister(messageError); // передать текст ошибки в инф.окно\r\n          setIsAuthUserUnsuccessfull(true)\r\n        } else {\r\n          setIsRegisterPopupOpened(true); // при положительном ответе открыть попап подверждения регистрации\r\n          setTimeout(() => { // закрыть подверждение через 3 сек.\r\n            setIsRegisterPopupOpened(false);\r\n            setRegisterIn(false);\r\n          }, 3000);\r\n          setRegisterIn(true);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        setIsAuthUserUnsuccessfull(false);\r\n      });\r\n  };\r\n\r\n  //пробросить данные из инпутов и отправить на сервер для авторизации пользователя\r\n  function handleLogin(dataUser) {\r\n    auth.login(dataUser)\r\n      .then((data) => {\r\n        if (data.message === 'Incorrect email address or password') {\r\n          setIsAuthUserUnsuccessfull(true);\r\n          setTextErrorRegister(data.message); // передать текст ошибки в инф.окно\r\n        } else {\r\n          localStorage.setItem('token', data.token);\r\n          localStorage.setItem(\"email\", dataUser.email);\r\n          getAuth(data.token);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  //запрос на сервер для авторизации\r\n  function getAuth(tkn) {\r\n    auth.getToken(tkn)\r\n      .then(() => {\r\n        setLoggedIn(true);\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n        setIsAuthUserUnsuccessfull(false);\r\n      });\r\n  }\r\n\r\n  //валидация токена\r\n  function tokenCheck() {\r\n    const jwt = localStorage.getItem('token');\r\n    if (jwt !== null) {\r\n      setLoggedIn(true);\r\n      getAuth(jwt);\r\n    } else {\r\n      setLoggedIn(false);\r\n    }\r\n  }\r\n\r\n\r\n  //проверка авторизации пользователя\r\n  useEffect(() => {\r\n    tokenCheck(localStorage.getItem('token'));\r\n  }, [loggedIn])\r\n\r\n  // выйти из аккаунта (пробрасывается из Header) \r\n  function handleLogginOut(data) {\r\n    setLoggedIn(data);\r\n    localStorage.clear();\r\n  }\r\n\r\n  return (\r\n    <currentUserContext.Provider value={currentUser}>\r\n      <div className=\"page\">\r\n        <Header handleLoggedInStateChanged={handleLogginOut} />\r\n        <Switch>\r\n          {/* Авторизация пользователя */}\r\n          <Route path=\"/sign-in\">\r\n            {loggedIn ? <Redirect to=\"/\" /> : <Login onLogin={handleLogin} />}\r\n          </Route>\r\n          {/* Регистрация нового пользователя */}\r\n          <Route path=\"/sign-up\">\r\n            {registerIn ? <Redirect to=\"/sign-in\" /> : <Register onRegister={handleRegister} />}\r\n          </Route>\r\n          <Route exact path=\"/\">\r\n            {loading ? <Spinner /> : <></>}\r\n            {loggedIn ?\r\n              <Main onEditAvatar={handleEditAvatarClick}\r\n                onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cards}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}\r\n              /> : <Redirect to=\"/sign-in\" />}\r\n          </Route>\r\n        </Switch>\r\n        <Footer loggedIn={loggedIn} />\r\n        {/* Информационное окно об успешной регистрации */}\r\n        <InfoTooltip isRegister={isRegisterPopupOpened} isClose={closeAllPopups} isAuth={isAuthUnsuccessfull} textError={textErrorRegister} />\r\n        {/**  <!--Попап Редактирование профиля --> */}\r\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} isClose={closeAllPopups} onUpdateUser={handleUpdateUser} />\r\n        {/** <!--Попап добавление изображений(карточек) пользователем --> */}\r\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} isClose={closeAllPopups} onAddPlace={handleAddPlaceSubmit} />\r\n        {/** <!--Попап форма редактирования аватара --> */}\r\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} isClose={closeAllPopups} onUpdateAvatar={handleUpdateAvatar} />\r\n        {/** <!-- Попап подтверждения удаления карточки --> */}\r\n        <PopupWithForm name='popup_card_remove'\r\n          text='Вы уверены?'\r\n          isOpen={isDeletePlacePopupOpen}\r\n          isClose={closeAllPopups} />\r\n        {/** <!--Попап Масштабированное изображение --> */}\r\n        < ImagePopup isOpen={isImagePopupOpened}\r\n          name={selectedCard.name}\r\n          link={selectedCard.src}\r\n          onClose={closeAllPopups} />\r\n      </div>\r\n    </currentUserContext.Provider >\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n//","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Header.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Main.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\PopupWithForm.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\ImagePopup.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\EditProfilePopup.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Footer.js",["191"],[],"import React from 'react';\r\n\r\nfunction Footer({loggedIn}) {\r\n    return (\r\n        <footer className={loggedIn ? \"footer\" : \"footer_unlogged\"}>\r\n            <p className=\"footer__copyright\">&copy; {(new Date).getFullYear()} Mesto Russia</p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\AddPlacePopup.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\EditAvatarPopup.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Spinner.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\utils\\Api.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\contexts\\CurrentUserContext.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Card.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Login.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\Register.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\ProtectedRoute.js",[],[],"C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\components\\InfoTooltip.js",["192","193"],[],"import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport Successfully from './../images/Union successfully.svg'\r\nimport Unsuccessfully from './../images/Union unsuccessful.svg'\r\nimport Loading from '../images/loading_circles_small.gif'\r\n\r\nfunction InfoTooltip({ isRegister, isClose, isAuth, textError }) {\r\n    //заготовка под изображение и текст ошибки \r\n    function message(url, title, textErrorOn, loader) {\r\n        return (\r\n            <>\r\n                <img className='popup__img-info-tooltip' src={url} />\r\n                <h2 className='popup__text-info-tooltip'>{title}<br />{textErrorOn} </h2>\r\n                <img className='popup__img-info-tooltip-loading' src={loader} />\r\n            </>\r\n        )\r\n    }\r\n    //отрисовать окно с сообщением\r\n\r\n    function showMessage() {\r\n        if (isRegister) {\r\n            return message(Successfully, 'Вы успешно зарегистрировались! Переход на страницу авторизации', '',  Loading)\r\n        } else if (isAuth) {\r\n            return message(Unsuccessfully, `Что-то пошло не так! Попробуйте ещё раз.`, textError)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <PopupWithForm\r\n            isOpen={isRegister || isAuth ? true : false}\r\n            isClose={isClose}\r\n            isActiveButtonSubmit={isRegister}\r\n            colorButtonSubmit={'popup__button_unvisible'} //спрятать кнопку сабмита\r\n            titleColorControl={'popup__title_unvisible'} // спрятать заголовок формы, убрать отступы\r\n            children={\r\n                <>\r\n                    <div className='popup__container-info-tooltip'>\r\n                        {showMessage()}\r\n                    </div>\r\n                </>\r\n            }\r\n        />\r\n    )\r\n}\r\n\r\n\r\nexport default InfoTooltip;","C:\\Users\\vyach\\dev\\react-mesto-auth\\src\\utils\\Auth.js",[],[],{"ruleId":"194","severity":1,"message":"195","line":38,"column":12,"nodeType":"196","messageId":"197","endLine":38,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":127,"column":6,"nodeType":"200","endLine":127,"endColumn":118,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":6,"column":55,"nodeType":"204","messageId":"205","endLine":6,"endColumn":63,"fix":"206"},{"ruleId":"194","severity":1,"message":"195","line":119,"column":12,"nodeType":"196","messageId":"197","endLine":119,"endColumn":34},{"ruleId":"198","severity":1,"message":"199","line":166,"column":6,"nodeType":"200","endLine":166,"endColumn":24,"suggestions":"207"},{"ruleId":"198","severity":1,"message":"208","line":300,"column":6,"nodeType":"200","endLine":300,"endColumn":16,"suggestions":"209"},{"ruleId":"202","severity":1,"message":"203","line":6,"column":55,"nodeType":"204","messageId":"205","endLine":6,"endColumn":63,"fix":"210"},{"ruleId":"211","severity":1,"message":"212","line":12,"column":17,"nodeType":"213","endLine":12,"endColumn":70},{"ruleId":"211","severity":1,"message":"212","line":14,"column":17,"nodeType":"213","endLine":14,"endColumn":81},"no-unused-vars","'handleDeletePlaceClick' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleCloseAllPopupsClickOverlay' and 'handleCloseAllPopupsEcs'. Either include them or remove the dependency array.","ArrayExpression",["214"],"new-parens","Missing '()' invoking a constructor.","NewExpression","missing",{"range":"215","text":"216"},["217"],"React Hook useEffect has a missing dependency: 'tokenCheck'. Either include it or remove the dependency array.",["218"],{"range":"219","text":"216"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"220","fix":"221"},[164,164],"()",{"desc":"222","fix":"223"},{"desc":"224","fix":"225"},[207,207],"Update the dependencies array to be: [isEditAvatarPopupOpen, isAddPlacePopupOpen, isEditProfilePopupOpen, isDeletePlacePopupOpen, isImagePopupOpened, handleCloseAllPopupsClickOverlay, handleCloseAllPopupsEcs]",{"range":"226","text":"227"},"Update the dependencies array to be: [handleCloseAllPopupsClickOverlay, handleCloseAllPopupsEcs, popupClosedState]",{"range":"228","text":"229"},"Update the dependencies array to be: [loggedIn, tokenCheck]",{"range":"230","text":"231"},[3980,4092],"[isEditAvatarPopupOpen, isAddPlacePopupOpen, isEditProfilePopupOpen, isDeletePlacePopupOpen, isImagePopupOpened, handleCloseAllPopupsClickOverlay, handleCloseAllPopupsEcs]",[5267,5285],"[handleCloseAllPopupsClickOverlay, handleCloseAllPopupsEcs, popupClosedState]",[9493,9503],"[loggedIn, tokenCheck]"]